{"ast":null,"code":"var _jsxFileName = \"/Users/rajjayvir/Desktop/Study/Study Terms/S6 Winter 24/CSCI 3172/labs/lab7/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    favoriteSeason: 'Spring'\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Basic validations\n    const firstNameRegex = /^[A-Za-z]+$/;\n    const lastNameRegex = /^[A-Za-z]+$/;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    let errors = {};\n    if (!firstNameRegex.test(formData.firstName)) {\n      errors.firstName = 'First Name must contain only alphabets.';\n    }\n    if (!lastNameRegex.test(formData.lastName)) {\n      errors.lastName = 'Last Name must contain only alphabets.';\n    }\n    if (!emailRegex.test(formData.email)) {\n      errors.email = 'Invalid email format.';\n    }\n    if (!passwordRegex.test(formData.password)) {\n      errors.password = 'Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number and one special character.';\n    }\n    if (Object.keys(errors).length === 0) {\n      // All fields are valid, render profile page\n      setSubmitted(true);\n    } else {\n      // Handle errors, you can display them to the user or perform any other action\n      console.log('Form has errors:', errors);\n    }\n  };\n  const renderProfilePage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 12\n        }, this), \" \", formData.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this), \" \", formData.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }, this), \" \", formData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Favorite Season:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }, this), \" \", formData.favoriteSeason]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: !submitted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: 'center',\n          color: '#444'\n        },\n        children: \"Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          margin: '0 auto',\n          maxWidth: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            name: \"firstName\",\n            value: formData.firstName,\n            onChange: handleChange,\n            pattern: \"[A-Za-z]+\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lastName\",\n            name: \"lastName\",\n            value: formData.lastName,\n            onChange: handleChange,\n            pattern: \"[A-Za-z]+\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\",\n            title: \"Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number and one special character.\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"favoriteSeason\",\n            children: \"Favorite Season:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"favoriteSeason\",\n            name: \"favoriteSeason\",\n            value: formData.favoriteSeason,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Spring\",\n              children: \"Spring\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Fall\",\n              children: \"Fall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Winter\",\n              children: \"Winter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : renderProfilePage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UwiVHktVR3RMVw+zaQmjIEJsD7s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","formData","setFormData","firstName","lastName","email","password","favoriteSeason","submitted","setSubmitted","handleChange","e","name","value","target","handleSubmit","preventDefault","firstNameRegex","lastNameRegex","emailRegex","passwordRegex","errors","test","Object","keys","length","console","log","renderProfilePage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","fontFamily","textAlign","color","onSubmit","margin","maxWidth","htmlFor","type","id","onChange","pattern","required","title","_c","$RefreshReg$"],"sources":["/Users/rajjayvir/Desktop/Study/Study Terms/S6 Winter 24/CSCI 3172/labs/lab7/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    favoriteSeason: 'Spring',\n  });\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Basic validations\n    const firstNameRegex = /^[A-Za-z]+$/;\n    const lastNameRegex = /^[A-Za-z]+$/;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n\n    let errors = {};\n\n    if (!firstNameRegex.test(formData.firstName)) {\n      errors.firstName = 'First Name must contain only alphabets.';\n    }\n\n    if (!lastNameRegex.test(formData.lastName)) {\n      errors.lastName = 'Last Name must contain only alphabets.';\n    }\n\n    if (!emailRegex.test(formData.email)) {\n      errors.email = 'Invalid email format.';\n    }\n\n    if (!passwordRegex.test(formData.password)) {\n      errors.password =\n        'Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number and one special character.';\n    }\n\n    if (Object.keys(errors).length === 0) {\n      // All fields are valid, render profile page\n      setSubmitted(true);\n    } else {\n      // Handle errors, you can display them to the user or perform any other action\n      console.log('Form has errors:', errors);\n    }\n  };\n\n  const renderProfilePage = () => {\n    return (\n      <div>\n        <h2>Profile</h2>\n        <p><strong>First Name:</strong> {formData.firstName}</p>\n        <p><strong>Last Name:</strong> {formData.lastName}</p>\n        <p><strong>Email:</strong> {formData.email}</p>\n        <p><strong>Favorite Season:</strong> {formData.favoriteSeason}</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\" style={{ fontFamily: 'Arial, sans-serif' }}>\n      {!submitted ? (\n        <>\n          <h1 style={{ textAlign: 'center', color: '#444' }}>Form</h1>\n          <form onSubmit={handleSubmit} style={{ margin: '0 auto', maxWidth: '300px' }}>\n            <div>\n              <label htmlFor=\"firstName\">First Name:</label>\n              <input\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n                value={formData.firstName}\n                onChange={handleChange}\n                pattern=\"[A-Za-z]+\"\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor=\"lastName\">Last Name:</label>\n              <input\n                type=\"text\"\n                id=\"lastName\"\n                name=\"lastName\"\n                value={formData.lastName}\n                onChange={handleChange}\n                pattern=\"[A-Za-z]+\"\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor=\"email\">Email:</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\"\n                title=\"Password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, one number and one special character.\"\n                required\n              />\n            </div>\n            <div>\n              <label htmlFor=\"favoriteSeason\">Favorite Season:</label>\n              <select\n                id=\"favoriteSeason\"\n                name=\"favoriteSeason\"\n                value={formData.favoriteSeason}\n                onChange={handleChange}\n                required\n              >\n                <option value=\"Spring\">Spring</option>\n                <option value=\"Fall\">Fall</option>\n                <option value=\"Winter\">Winter</option>\n              </select>\n            </div>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </>\n      ) : (\n        renderProfilePage()\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}